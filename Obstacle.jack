class Obstacle {
    field ObstacleController controller;
    field Obstacle prev;
    field Obstacle next;
    field boolean abstract;
    field int xPos;
    field int xSize;
    field int ySize;
    field boolean passedDino;
    
    constructor Obstacle new(ObstacleController c,int x, int y) {
        let controller = c;
        let xPos = 511 - x;
        let xSize = x;
        let ySize = y;
        let passedDino = false;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void setPrev(Obstacle obs) {
        let prev = obs;
        return;
    }

    method void setNext(Obstacle obs) {
        let next = obs;
        return;
    }

    method Obstacle getPrev() {
        return prev;
    }

    method Obstacle getNext() {
        return next;
    }

    method void move(int xSpeed) {
        do erase();
        let xPos = xPos - xSpeed;
        do draw();

        do checkGameOver();
        do checkScore();
        return;
    }

    method boolean canMoveFurther(int speed) {
        return ~(xPos < speed);
    }

    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(xPos, 255 - ySize, xPos + xSize, 255);
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(xPos, 255 - ySize, xPos + xSize, 255);
        return;
    }

    method void checkGameOver(){
        var Dino dino;
        var boolean s0, s1, s2;
        let dino = controller.getDino();
        let s0 = (dino.getXPos() + dino.getXSize() > xPos);
        let s1 = (xPos + xSize > dino.getXPos());
        let s2 = (ySize > dino.getYPos());
        if (s0 & s1 & s2) {
            do controller.stopGame();
        }
        return;
    }

    method void checkScore() {
        var Dino dino;
        let dino = controller.getDino();
        if ((dino.getXPos() > (xPos + xSize)) & ~passedDino) {
            do controller.incScore();
            let passedDino = true;
        }
        return;
    }
}
