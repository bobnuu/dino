class Dino {

    field int xSize, ySize;
    field int yPos;
    field int xSpeed, ySpeed;
    field int yAcc;
    field int leftMargin;
    
    constructor Dino new(int speed) {
        let xSize = 48;
        let ySize = 40;
        let yPos = 0;
        let xSpeed = speed;
        let ySpeed = 0;
        // Acceleration
        let yAcc = -1;
        let leftMargin = 64;
        do draw();
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return ;
    }

    method int getYPos() {
        return yPos;
    }

    method int getXPos() {
        return leftMargin;
    }

    method int getXSize() {
        return xSize;
    }

    method void run() {
        var int yNew;
        let yNew = yPos;
        if (yPos > 0) {
            let ySpeed = ySpeed + yAcc;
        }
        if (~(ySpeed = 0)) {
            let yNew = yPos + ySpeed;
            if (yNew < 0) {
                let yNew = 0;
            }
        }
        if (~(yPos = yNew)) {
            // Position changed
            do erase();
            let yPos = yNew;
            do draw();
        }
        return;
    }

    method void draw() {
        var int yTop;
        let yTop = 256 - ySize - yPos;
        do Drawer.drawDino(32 * yTop + (leftMargin / 16));
        return;
    }

    method void erase() {
        var int y1, y2, tx1;
        let y2 = 255 - yPos;
        let y1 = y2 - ySize;
        do Screen.setColor(false);
        do Screen.drawRectangle(leftMargin, y1 - 50, leftMargin + xSize, y2);
        return;
    }

    method void jump(int acc) {
        if (yPos = 0) {
            let ySpeed = acc;
        }
        return;
    }

    method int getSpeed() {
        return xSpeed;
    }
}