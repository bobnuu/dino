class Drawer {
    function void drawDino(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +320, 1);
        do Memory.poke(memAddress +352, 3);
        do Memory.poke(memAddress +384, 3);
        do Memory.poke(memAddress +416, 7);
        do Memory.poke(memAddress +448, 7);
        do Memory.poke(memAddress +480, 15);
        do Memory.poke(memAddress +512, 31);
        do Memory.poke(memAddress +544, 127);
        do Memory.poke(memAddress +576, -15361);
        do Memory.poke(memAddress +608, -2);
        do Memory.poke(memAddress +640, -2);
        do Memory.poke(memAddress +672, -4);
        do Memory.poke(memAddress +704, -4);
        do Memory.poke(memAddress +736, -8);
        do Memory.poke(memAddress +768, -32);
        do Memory.poke(memAddress +800, -64);
        do Memory.poke(memAddress +832, -256);
        do Memory.poke(memAddress +864, -2048);
        do Memory.poke(memAddress +896, -4096);
        do Memory.poke(memAddress +928, -4096);
        do Memory.poke(memAddress +960, -8192);
        do Memory.poke(memAddress +992, -8192);
        do Memory.poke(memAddress +1024, -8192);
        do Memory.poke(memAddress +1056, -8192);
        do Memory.poke(memAddress +1088, -8192);
        do Memory.poke(memAddress +1120, -8192);
        do Memory.poke(memAddress +1152, -8192);
        do Memory.poke(memAddress +1184, -8192);
        do Memory.poke(memAddress +1216, -8192);
        do Memory.poke(memAddress +1248, -8192);
        // column 1
        do Memory.poke(memAddress +1, -1024);
        do Memory.poke(memAddress +33, -512);
        do Memory.poke(memAddress +65, 7936);
        do Memory.poke(memAddress +97, 24448);
        do Memory.poke(memAddress +129, 8064);
        do Memory.poke(memAddress +161, -128);
        do Memory.poke(memAddress +193, -128);
        do Memory.poke(memAddress +225, -128);
        do Memory.poke(memAddress +257, -128);
        do Memory.poke(memAddress +289, -128);
        do Memory.poke(memAddress +321, -128);
        do Memory.poke(memAddress +353, -128);
        do Memory.poke(memAddress +385, -128);
        do Memory.poke(memAddress +417, -64);
        do Memory.poke(memAddress +449, -32);
        do Memory.poke(memAddress +481, -16);
        do Memory.poke(memAddress +513, 32760);
        do Memory.poke(memAddress +545, -2);
        do Memory.poke(memAddress +577, -1);
        do Memory.poke(memAddress +609, 32767);
        do Memory.poke(memAddress +641, 32767);
        do Memory.poke(memAddress +673, 32767);
        do Memory.poke(memAddress +705, 16383);
        do Memory.poke(memAddress +737, 16383);
        do Memory.poke(memAddress +769, 16383);
        do Memory.poke(memAddress +801, 16383);
        do Memory.poke(memAddress +833, 8191);
        do Memory.poke(memAddress +865, 8191);
        do Memory.poke(memAddress +897, 2047);
        do Memory.poke(memAddress +929, 1023);
        do Memory.poke(memAddress +961, 511);
        do Memory.poke(memAddress +993, 247);
        do Memory.poke(memAddress +1025, 243);
        do Memory.poke(memAddress +1057, 225);
        do Memory.poke(memAddress +1089, 224);
        do Memory.poke(memAddress +1121, 224);
        do Memory.poke(memAddress +1153, 224);
        do Memory.poke(memAddress +1185, 224);
        do Memory.poke(memAddress +1217, 995);
        do Memory.poke(memAddress +1249, 995);
        // column 2
        do Memory.poke(memAddress +2, 63);
        do Memory.poke(memAddress +34, 255);
        do Memory.poke(memAddress +66, 1023);
        do Memory.poke(memAddress +98, 2047);
        do Memory.poke(memAddress +130, 4095);
        do Memory.poke(memAddress +162, 8191);
        do Memory.poke(memAddress +194, 16383);
        do Memory.poke(memAddress +226, 16383);
        do Memory.poke(memAddress +258, 32767);
        do Memory.poke(memAddress +290, 32767);
        do Memory.poke(memAddress +322, 32767);
        do Memory.poke(memAddress +354, 32767);
        do Memory.poke(memAddress +386, 16383);
        do Memory.poke(memAddress +418, 8191);
        do Memory.poke(memAddress +546, 31);
        do Memory.poke(memAddress +578, 31);
        do Memory.poke(memAddress +610, 24);
        return;
    }

    function void drawBox(int x0, int y0, int x1, iny y1, int width) {
        do Screen.setColor(false);
        do Screen.drawRectangle(x0 - width, y0 - width, x1 + width, y1 + width);
        do Screen.setColor(true);
        do Screen.drawRectangle(x0, y0, x1, y1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x0 + width, y0 + width, x1 - width, y1 - width);
        return;
    }

    function void printFinalScore(int score) {
        do Drawer.drawBox(150, 75, 361, 180, 3);
        do Output.moveCursor(11, 24);
        do Output.printString("Your score is ");
        do Output.printInt(score);
        return;
    }
}