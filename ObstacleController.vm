function ObstacleController.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
push constant 0
push constant 0
call Obstacle.new 3
pop this 1
push pointer 0
push constant 0
push constant 0
call Obstacle.new 3
pop this 2
push this 1
push this 2
call Obstacle.setNext 2
pop temp 0
push this 2
push this 1
call Obstacle.setPrev 2
pop temp 0
push constant 53
call Randomizer.new 1
pop this 6
push constant 200
pop this 4
push constant 300
pop this 5
push this 6
push this 4
push this 5
call Randomizer.randint 3
pop this 3
push pointer 0
return
function ObstacleController.getDino 0
push argument 0
pop pointer 0
push this 0
call DinoGame.getDino 1
return
function ObstacleController.stopGame 0
push argument 0
pop pointer 0
push this 0
call DinoGame.stop 1
pop temp 0
push constant 0
return
function ObstacleController.incScore 0
push argument 0
pop pointer 0
push this 0
call DinoGame.incScore 1
pop temp 0
push constant 0
return
function ObstacleController.decInterval 0
push argument 0
pop pointer 0
push this 4
push constant 2
sub
pop this 4
push this 5
push constant 2
sub
pop this 5
push constant 0
return
function ObstacleController.move 1
push argument 0
pop pointer 0
push pointer 0
call ObstacleController.checkNewObstacle 1
pop temp 0
push this 1
call Obstacle.getNext 1
pop local 0
label WHILE_EXP0
push local 0
push this 2
eq
not
not
if-goto WHILE_END0
push local 0
push argument 1
call Obstacle.canMoveFurther 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 1
call Obstacle.move 2
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 0
call ObstacleController.removeObstacle 2
pop temp 0
label IF_END0
push local 0
call Obstacle.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function ObstacleController.checkNewObstacle 0
push argument 0
pop pointer 0
push this 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call ObstacleController.addNewObstacle 1
pop temp 0
push this 6
push this 4
push this 5
call Randomizer.randint 3
pop this 3
label IF_FALSE0
push this 3
push constant 1
sub
pop this 3
push constant 0
return
function ObstacleController.addNewObstacle 2
push argument 0
pop pointer 0
push pointer 0
push constant 5
push constant 20
call Obstacle.new 3
pop local 0
push this 2
call Obstacle.getPrev 1
pop local 1
push local 1
push local 0
call Obstacle.setNext 2
pop temp 0
push local 0
push local 1
call Obstacle.setPrev 2
pop temp 0
push local 0
push this 2
call Obstacle.setNext 2
pop temp 0
push this 2
push local 0
call Obstacle.setPrev 2
pop temp 0
push constant 0
return
function ObstacleController.removeObstacle 2
push argument 0
pop pointer 0
push argument 1
call Obstacle.erase 1
pop temp 0
push argument 1
call Obstacle.getPrev 1
pop local 0
push argument 1
call Obstacle.getNext 1
pop local 1
push local 0
push local 1
call Obstacle.setNext 2
pop temp 0
push local 1
push local 0
call Obstacle.setPrev 2
pop temp 0
push argument 1
call Obstacle.dispose 1
pop temp 0
push constant 0
return
function ObstacleController.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
